import numpy as np

"""
Stickers are numbered clockwise around the outside of a face, with centers last
Centers are represented explicitly so whole-cube rotations can be encoded
Face order: U L F R B D
"""

colors = {
    0: "W",
    1: "O",
    2: "G",
    3: "R",
    4: "B",
    5: "Y"
}

solved_state = np.array([0, 0, 0, 0, 0, 0, 0, 0, 0,
                         1, 1, 1, 1, 1, 1, 1, 1, 1,
                         2, 2, 2, 2, 2, 2, 2, 2, 2,
                         3, 3, 3, 3, 3, 3, 3, 3, 3,
                         4, 4, 4, 4, 4, 4, 4, 4, 4,
                         5, 5, 5, 5, 5, 5, 5, 5, 5])

move_defs = {'id': [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53], 'U': [6, 7, 0, 1, 2, 3, 4, 5, 8, 18, 19, 20, 12, 13, 14, 15, 16, 17, 27, 28, 29, 21, 22, 23, 24, 25, 26, 36, 37, 38, 30, 31, 32, 33, 34, 35, 9, 10, 11, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53], 'x': [18, 19, 20, 21, 22, 23, 24, 25, 26, 11, 12, 13, 14, 15, 16, 9, 10, 17, 45, 46, 47, 48, 49, 50, 51, 52, 53, 33, 34, 27, 28, 29, 30, 31, 32, 35, 4, 5, 6, 7, 0, 1, 2, 3, 8, 40, 41, 42, 43, 36, 37, 38, 39, 44], 'S': [0, 1, 2, 10, 4, 5, 6, 14, 17, 9, 52, 11, 12, 13, 48, 15, 16, 53, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 7, 29, 30, 31, 3, 33, 34, 8, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 28, 49, 50, 51, 32, 35], 'U2': [4, 5, 6, 7, 0, 1, 2, 3, 8, 27, 28, 29, 12, 13, 14, 15, 16, 17, 36, 37, 38, 21, 22, 23, 24, 25, 26, 9, 10, 11, 30, 31, 32, 33, 34, 35, 18, 19, 20, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53], "U'": [2, 3, 4, 5, 6, 7, 0, 1, 8, 36, 37, 38, 12, 13, 14, 15, 16, 17, 9, 10, 11, 21, 22, 23, 24, 25, 26, 18, 19, 20, 30, 31, 32, 33, 34, 35, 27, 28, 29, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53], 'x2': [45, 46, 47, 48, 49, 50, 51, 52, 53, 13, 14, 15, 16, 9, 10, 11, 12, 17, 40, 41, 42, 43, 36, 37, 38, 39, 44, 31, 32, 33, 34, 27, 28, 29, 30, 35, 22, 23, 24, 25, 18, 19, 20, 21, 26, 0, 1, 2, 3, 4, 5, 6, 7, 8], "x'": [40, 41, 42, 43, 36, 37, 38, 39, 44, 15, 16, 9, 10, 11, 12, 13, 14, 17, 0, 1, 2, 3, 4, 5, 6, 7, 8, 29, 30, 31, 32, 33, 34, 27, 28, 35, 49, 50, 51, 52, 45, 46, 47, 48, 53, 18, 19, 20, 21, 22, 23, 24, 25, 26], 'S2': [0, 1, 2, 52, 4, 5, 6, 48, 53, 9, 32, 11, 12, 13, 28, 15, 16, 35, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 14, 29, 30, 31, 10, 33, 34, 17, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 7, 49, 50, 51, 3, 8], "S'": [0, 1, 2, 32, 4, 5, 6, 28, 35, 9, 3, 11, 12, 13, 7, 15, 16, 8, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 48, 29, 30, 31, 52, 33, 34, 53, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 14, 49, 50, 51, 10, 17], 'F': [0, 1, 2, 3, 11, 12, 13, 7, 8, 9, 10, 45, 46, 47, 14, 15, 16, 17, 24, 25, 18, 19, 20, 21, 22, 23, 26, 6, 28, 29, 30, 31, 32, 4, 5, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 33, 34, 27, 48, 49, 50, 51, 52, 53], 'F2': [0, 1, 2, 3, 45, 46, 47, 7, 8, 9, 10, 33, 34, 27, 14, 15, 16, 17, 22, 23, 24, 25, 18, 19, 20, 21, 26, 13, 28, 29, 30, 31, 32, 11, 12, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 4, 5, 6, 48, 49, 50, 51, 52, 53], "F'": [0, 1, 2, 3, 33, 34, 27, 7, 8, 9, 10, 4, 5, 6, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 18, 19, 26, 47, 28, 29, 30, 31, 32, 45, 46, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 11, 12, 13, 48, 49, 50, 51, 52, 53], 'B': [29, 30, 31, 3, 4, 5, 6, 7, 8, 2, 10, 11, 12, 13, 14, 0, 1, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 49, 50, 51, 32, 33, 34, 35, 42, 43, 36, 37, 38, 39, 40, 41, 44, 45, 46, 47, 48, 15, 16, 9, 52, 53], 'B2': [49, 50, 51, 3, 4, 5, 6, 7, 8, 31, 10, 11, 12, 13, 14, 29, 30, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 15, 16, 9, 32, 33, 34, 35, 40, 41, 42, 43, 36, 37, 38, 39, 44, 45, 46, 47, 48, 0, 1, 2, 52, 53], "B'": [15, 16, 9, 3, 4, 5, 6, 7, 8, 51, 10, 11, 12, 13, 14, 49, 50, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 0, 1, 2, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 36, 37, 44, 45, 46, 47, 48, 29, 30, 31, 52, 53], 'D': [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 40, 41, 42, 16, 17, 18, 19, 20, 21, 13, 14, 15, 25, 26, 27, 28, 29, 30, 22, 23, 24, 34, 35, 36, 37, 38, 39, 31, 32, 33, 43, 44, 51, 52, 45, 46, 47, 48, 49, 50, 53], 'D2': [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 31, 32, 33, 16, 17, 18, 19, 20, 21, 40, 41, 42, 25, 26, 27, 28, 29, 30, 13, 14, 15, 34, 35, 36, 37, 38, 39, 22, 23, 24, 43, 44, 49, 50, 51, 52, 45, 46, 47, 48, 53], "D'": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 22, 23, 24, 16, 17, 18, 19, 20, 21, 31, 32, 33, 25, 26, 27, 28, 29, 30, 40, 41, 42, 34, 35, 36, 37, 38, 39, 13, 14, 15, 43, 44, 47, 48, 49, 50, 51, 52, 45, 46, 53], 'z': [15, 16, 9, 10, 11, 12, 13, 14, 17, 51, 52, 45, 46, 47, 48, 49, 50, 53, 24, 25, 18, 19, 20, 21, 22, 23, 26, 6, 7, 0, 1, 2, 3, 4, 5, 8, 38, 39, 40, 41, 42, 43, 36, 37, 44, 33, 34, 27, 28, 29, 30, 31, 32, 35], 'z2': [49, 50, 51, 52, 45, 46, 47, 48, 53, 31, 32, 33, 34, 27, 28, 29, 30, 35, 22, 23, 24, 25, 18, 19, 20, 21, 26, 13, 14, 15, 16, 9, 10, 11, 12, 17, 40, 41, 42, 43, 36, 37, 38, 39, 44, 4, 5, 6, 7, 0, 1, 2, 3, 8], "z'": [29, 30, 31, 32, 33, 34, 27, 28, 35, 2, 3, 4, 5, 6, 7, 0, 1, 8, 20, 21, 22, 23, 24, 25, 18, 19, 26, 47, 48, 49, 50, 51, 52, 45, 46, 53, 42, 43, 36, 37, 38, 39, 40, 41, 44, 11, 12, 13, 14, 15, 16, 9, 10, 17], 'R': [0, 1, 20, 21, 22, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 47, 48, 49, 23, 24, 25, 26, 33, 34, 27, 28, 29, 30, 31, 32, 35, 4, 37, 38, 39, 40, 41, 2, 3, 44, 45, 46, 42, 43, 36, 50, 51, 52, 53], 'R2': [0, 1, 47, 48, 49, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 42, 43, 36, 23, 24, 25, 26, 31, 32, 33, 34, 27, 28, 29, 30, 35, 22, 37, 38, 39, 40, 41, 20, 21, 44, 45, 46, 2, 3, 4, 50, 51, 52, 53], "R'": [0, 1, 42, 43, 36, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 2, 3, 4, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 27, 28, 35, 49, 37, 38, 39, 40, 41, 47, 48, 44, 45, 46, 20, 21, 22, 50, 51, 52, 53], 'L': [40, 1, 2, 3, 4, 5, 38, 39, 8, 15, 16, 9, 10, 11, 12, 13, 14, 17, 0, 19, 20, 21, 22, 23, 6, 7, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 51, 52, 45, 41, 42, 43, 44, 18, 46, 47, 48, 49, 50, 24, 25, 53], 'L2': [45, 1, 2, 3, 4, 5, 51, 52, 8, 13, 14, 15, 16, 9, 10, 11, 12, 17, 40, 19, 20, 21, 22, 23, 38, 39, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 24, 25, 18, 41, 42, 43, 44, 0, 46, 47, 48, 49, 50, 6, 7, 53], "L'": [18, 1, 2, 3, 4, 5, 24, 25, 8, 11, 12, 13, 14, 15, 16, 9, 10, 17, 45, 19, 20, 21, 22, 23, 51, 52, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 6, 7, 0, 41, 42, 43, 44, 40, 46, 47, 48, 49, 50, 38, 39, 53], 'y': [6, 7, 0, 1, 2, 3, 4, 5, 8, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 9, 10, 11, 12, 13, 14, 15, 16, 17, 47, 48, 49, 50, 51, 52, 45, 46, 53], 'y2': [4, 5, 6, 7, 0, 1, 2, 3, 8, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 49, 50, 51, 52, 45, 46, 47, 48, 53], "y'": [2, 3, 4, 5, 6, 7, 0, 1, 8, 36, 37, 38, 39, 40, 41, 42, 43, 44, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 51, 52, 45, 46, 47, 48, 49, 50, 53], 'E': [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 39, 13, 14, 15, 43, 44, 18, 19, 20, 12, 22, 23, 24, 16, 17, 27, 28, 29, 21, 31, 32, 33, 25, 26, 36, 37, 38, 30, 40, 41, 42, 34, 35, 45, 46, 47, 48, 49, 50, 51, 52, 53], 'E2': [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 30, 13, 14, 15, 34, 35, 18, 19, 20, 39, 22, 23, 24, 43, 44, 27, 28, 29, 12, 31, 32, 33, 16, 17, 36, 37, 38, 21, 40, 41, 42, 25, 26, 45, 46, 47, 48, 49, 50, 51, 52, 53], "E'": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 21, 13, 14, 15, 25, 26, 18, 19, 20, 30, 22, 23, 24, 34, 35, 27, 28, 29, 39, 31, 32, 33, 43, 44, 36, 37, 38, 12, 40, 41, 42, 16, 17, 45, 46, 47, 48, 49, 50, 51, 52, 53], 'M': [0, 41, 2, 3, 4, 37, 6, 7, 44, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 1, 20, 21, 22, 5, 24, 25, 8, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 50, 38, 39, 40, 46, 42, 43, 53, 45, 19, 47, 48, 49, 23, 51, 52, 26], 'M2': [0, 46, 2, 3, 4, 50, 6, 7, 53, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 41, 20, 21, 22, 37, 24, 25, 44, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 23, 38, 39, 40, 19, 42, 43, 26, 45, 1, 47, 48, 49, 5, 51, 52, 8], "M'": [0, 19, 2, 3, 4, 23, 6, 7, 26, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 46, 20, 21, 22, 50, 24, 25, 53, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 5, 38, 39, 40, 1, 42, 43, 8, 45, 41, 47, 48, 49, 37, 51, 52, 44]}


def do_move(cube_state, move):
    return cube_state[move_defs[move]]


def do_moves(cube_state, moves):
    cube = cube_state
    for move in moves:
        cube = cube[move_defs[move]]
    return cube


def do_alg(cube_state, alg):
    moves = alg.split(" ")
    return do_moves(cube_state, moves)


def show_cube(cube_state):
    """ Pretty-print a cube state c """
    c = list(map(lambda i: colors[i], cube_state))

    # U face
    print("      ", c[0], c[1], c[2])
    print("      ", c[7], c[8], c[3])
    print("      ", c[6], c[5], c[4])

    # L | F | R | B faces
    print(c[9],  c[10], c[11], "",
          c[18], c[19], c[20], "",
          c[27], c[28], c[29], "",
          c[36], c[37], c[38])
    print(c[16], c[17], c[12], "",
          c[25], c[26], c[21], "",
          c[34], c[35], c[30], "",
          c[43], c[44], c[39])
    print(c[15], c[14], c[13], "",
          c[24], c[23], c[22], "",
          c[33], c[32], c[31], "",
          c[42], c[41], c[40])

    # D face
    print("      ", c[45], c[46], c[47])
    print("      ", c[52], c[53], c[48])
    print("      ", c[51], c[50], c[49])
    print()


def show_alg(cube_state, alg):
    after = do_alg(cube_state, alg)
    show_cube(after)


if __name__ == "__main__":
    print(do_alg(solved_state, "B2 U2 L2 F2 U R2 F2 U B2 U2 R2 B' D' B2 F2 R2 B L' F' L2"))
